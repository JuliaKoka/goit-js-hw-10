{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\n\nconst input = document.querySelector('input');\nconst startButton = document.querySelector('[data-start]');\nconst elements = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const currentDate = new Date();\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n      userSelectedDate = selectedDate;\n    }\n    console.log(selectedDate);\n  },\n};\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  flatpickr('#datetime-picker', options);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nstartButton.addEventListener('click', handleClick);\n\nfunction handleClick(evt) {\n  startButton.disabled = true;\n  input.disabled = true;\n  const timerInterval = setInterval(() => {\n    const currentTime = new Date();\n    const timeDifference = userSelectedDate - currentTime;\n\n    if (timeDifference <= 0) {\n      clearInterval(timerInterval);\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n    elements.days.textContent = addLeadingZero(days);\n    elements.hours.textContent = addLeadingZero(hours);\n    elements.minutes.textContent = addLeadingZero(minutes);\n    elements.seconds.textContent = addLeadingZero(seconds);\n  }, 1000);\n}\n"],"names":["userSelectedDate","input","startButton","elements","options","selectedDates","currentDate","selectedDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","handleClick","evt","timerInterval","timeDifference"],"mappings":"2GAMA,IAAIA,EAEJ,MAAMC,EAAQ,SAAS,cAAc,OAAO,EACtCC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAW,CACf,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAc,IAAI,KAClBC,EAAeF,EAAc,CAAC,EAChCE,GAAgBD,GAClBE,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDN,EAAY,SAAW,KAEvBA,EAAY,SAAW,GACvBF,EAAmBO,GAErB,QAAQ,IAAIA,CAAY,CACzB,CACH,EAEA,SAAS,iBAAiB,mBAAoB,UAAY,CACxDE,EAAU,mBAAoBL,CAAO,CACvC,CAAC,EAED,SAASM,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAf,EAAY,iBAAiB,QAASgB,CAAW,EAEjD,SAASA,EAAYC,EAAK,CACxBjB,EAAY,SAAW,GACvBD,EAAM,SAAW,GACjB,MAAMmB,EAAgB,YAAY,IAAM,CAEtC,MAAMC,EAAiBrB,EADH,IAAI,KAGxB,GAAIqB,GAAkB,EAAG,CACvB,cAAcD,CAAa,EAC3B,MACD,CAED,KAAM,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUW,CAAc,EAElElB,EAAS,KAAK,YAAca,EAAeJ,CAAI,EAC/CT,EAAS,MAAM,YAAca,EAAeH,CAAK,EACjDV,EAAS,QAAQ,YAAca,EAAeF,CAAO,EACrDX,EAAS,QAAQ,YAAca,EAAeD,CAAO,CACtD,EAAE,GAAI,CACT"}